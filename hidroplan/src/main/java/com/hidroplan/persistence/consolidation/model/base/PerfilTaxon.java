package com.hidroplan.persistence.consolidation.model.base;
// Generated 16/06/2017 21:45:16 by Hibernate Tools 5.2.1.Final

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import com.hidroplan.persistence.consolidation.model.typing.TypePerfilTaxon;

/**
 * PerfilTaxon generated by hbm2java
 */
@Entity
@Table(name = "perfil_taxon", catalog = "hidroplan", uniqueConstraints = @UniqueConstraint(columnNames = "id_taxon"))
public class PerfilTaxon implements java.io.Serializable {

	private static final long serialVersionUID = -3897987267292559684L;
	private int id;
	private Taxon taxon;
	private TypePerfilTaxon tipo;
	private Set<SolucaoNutritivaElemento> solucaoNutritivaElementos = new HashSet<SolucaoNutritivaElemento>(0);
	private Set<FatorAmbiente> fatorAmbientes = new HashSet<FatorAmbiente>(0);

	public PerfilTaxon() {
	}

	public PerfilTaxon(int id, Taxon taxon) {
		this.id = id;
		this.taxon = taxon;
	}

	public PerfilTaxon(int id, Taxon taxon, TypePerfilTaxon tipo, Set<SolucaoNutritivaElemento> solucaoNutritivaElementos,
			Set<FatorAmbiente> fatorAmbientes) {
		this.id = id;
		this.taxon = taxon;
		this.tipo = tipo;
		this.solucaoNutritivaElementos = solucaoNutritivaElementos;
		this.fatorAmbientes = fatorAmbientes;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_taxon", unique = true, nullable = false)
	public Taxon getTaxon() {
		return this.taxon;
	}

	public void setTaxon(Taxon taxon) {
		this.taxon = taxon;
	}

	@Enumerated(EnumType.STRING)
	@Column(name = "tipo")
	public TypePerfilTaxon getTipo() {
		return this.tipo;
	}

	public void setTipo(TypePerfilTaxon tipo) {
		this.tipo = tipo;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "perfilTaxon")
	public Set<SolucaoNutritivaElemento> getSolucaoNutritivaElementos() {
		return this.solucaoNutritivaElementos;
	}

	public void setSolucaoNutritivaElementos(Set<SolucaoNutritivaElemento> solucaoNutritivaElementos) {
		this.solucaoNutritivaElementos = solucaoNutritivaElementos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "perfilTaxon")
	public Set<FatorAmbiente> getFatorAmbientes() {
		return this.fatorAmbientes;
	}

	public void setFatorAmbientes(Set<FatorAmbiente> fatorAmbientes) {
		this.fatorAmbientes = fatorAmbientes;
	}

}
